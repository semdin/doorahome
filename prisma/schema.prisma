// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id String @id @default(uuid())
  name String
  siteLink String   @default("default_siteLink_value")
  cardName String   @default("default_cardName_value")
  card1Title String @default("default_card1Title_value")
  card1Description String @db.VarChar(1000) @default("default_card1Description_value")
  card2Title String @default("default_card2Title_value")
  card2Description String @db.VarChar(1000) @default("default_card2Description_value")
  card3Title String @default("default_card3Title_value")
  card3Description String @db.VarChar(1000) @default("default_card3Description_value")
  fLogoUrl String @default("default_fLogoUrl_value")
  fRes1Title String @default("default_fRes1Title_value")
  fRes1Link String @default("default_fRes1Link_value")
  fRes2Title String @default("default_fRes2Title_value")
  fRes2Link String @default("default_fRes2Link_value")
  facebookUrl String @default("default_facebookUrl_value")
  instagramUrl String @default("default_instagramUrl_value")
  twitterUrl String @default("default_twitterUrl_value")
  privacyPolicy String @default("default_privacyPolicy_value")
  termsAndConditions String @default("default_termsAndConditions_value")
  contactUsDescription String @db.VarChar(1000) @default("default_contactUsDescription_value")
  contactUsCard1Descrition String @db.VarChar(1000) @default("default_contactUsCard1Descrition_value")
  contactUsCard1Email String @default("default_contactUsCard1Email_value")
  contactUsCard2Descrition String @db.VarChar(1000) @default("default_contactUsCard2Descrition_value")
  contactUsCard2Phone String @default("default_contactUsCard2Phone_value")
  aboutUsDescription String @db.VarChar(1000) @default("default_aboutUsDescription_value")
  aboutUsPhotoUrl String @default("default_aboutUsPhotoUrl_value")
  aboutUsOurStory String @db.VarChar(1000) @default("default_aboutUsOurStory_value")
  userId String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  sizes Size[] @relation("StoreToSize")
  colors Color[] @relation("StoreToColor")
  products Product[] @relation("StoreToProduct")
  orders Order[] @relation("StoreToOrder")
  contacts Contact[] @relation("StoreToContact")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Billboard {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label String
  imageUrl String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  products Product[] @relation("CategoryToProduct")
  parentCategoryId String
  parentCategory   Category?  @relation("CategoryToCategory", fields: [parentCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category  Category[] @relation("CategoryToCategory")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
  @@index([parentCategoryId])
}

model Size {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToSize", fields: [storeId], references: [id])
  name String
  value String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([storeId])
}

model Color {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  name String
  value String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([storeId])
}

model Contact {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToContact", fields: [storeId], references: [id])
  email String
  title String
  message String
  createdAt DateTime @default(now())
  @@index([storeId])
}

model Product {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name String
  price Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  sizeId String
  size Size @relation(fields: [sizeId], references: [id])
  colorId String
  color Color @relation(fields: [colorId], references: [id])
  images Image[]
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id String @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([productId])
}

model Order {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[]
  isPaid Boolean @default(false)
  phone String @default("")
  address String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model OrderItem {
  id String @id @default(uuid())
  orderId String
  order Order @relation(fields: [orderId], references: [id])
  productId String
  product Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}